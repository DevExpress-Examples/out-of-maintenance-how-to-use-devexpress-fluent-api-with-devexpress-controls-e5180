using DevExpress.Mvvm;
using DevExpress.Mvvm.DataAnnotations;
using System.ComponentModel;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel.DataAnnotations.Schema;
using DataAnnotationAttributes.Model;

namespace DataAnnotationAttributes {
    [MetadataType(typeof(ContactMetadata))]
    public partial class Contact {
        public class ContactMetadata: IMetadataProvider<Contact> {
            public void BuildMetadata(MetadataBuilder<Contact> builder) {
                builder
                    .Group("General Info")
                        .ContainsProperty(x => x.FirstName)
                        .ContainsProperty(x => x.LastName)
                        .ContainsProperty(x => x.CreditCardNumber)
                    .EndGroup()
                    .Group("Contacts")
                        .ContainsProperty(x => x.Email)
                        .ContainsProperty(x => x.Phone)
                    .EndGroup()
                    .Group("Address")
                        .ContainsProperty(x => x.Address)
                        .ContainsProperty(x => x.City)
                        .ContainsProperty(x => x.State)
                        .ContainsProperty(x => x.Zip)
                    .EndGroup();

                builder.Property(x => x.ID).NotAutoGenerated();

                builder.Property(x => x.FirstName).Required();
                builder.Property(x => x.FirstName).MaxLength(25, () => "Value is too long");

                builder.Property(x => x.LastName).Required();

                builder.Property(x => x.CreditCardNumber).CreditCardDataType();
                builder.Property(x => x.CreditCardNumber).NullDisplayText("<empty>");

                builder.Property(x => x.Email).EmailAddressDataType();
                builder.Property(x => x.Email).NullDisplayText("<empty>");

                builder.Property(x => x.Phone).PhoneNumberDataType();
                builder.Property(x => x.Phone).NullDisplayText("<empty>");

                builder.Property(x => x.Address).NullDisplayText("<empty>");

                builder.Property(x => x.City).NullDisplayText("<empty>");
                builder.Property(x => x.City).RegExMask(@"\w{1,25}");

                builder.Property(x => x.State).NullDisplayText("<empty>");

                builder.Property(x => x.Zip).NullDisplayText("<empty>");

                builder.Property(x => x.Photo).NotAutoGenerated();
                builder.Property(x => x.Photo).NullDisplayText("<empty>");
            }
        }
    }
}